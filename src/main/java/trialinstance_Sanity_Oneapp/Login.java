package trialinstance_Sanity_Oneapp;

import io.testproject.java.annotations.v2.Parameter;
import io.testproject.java.annotations.v2.Test;
import io.testproject.java.enums.ParameterDirection;
import io.testproject.java.enums.TakeScreenshotConditionType;
import io.testproject.java.sdk.v2.drivers.WebDriver;
import io.testproject.java.sdk.v2.enums.ExecutionResult;
import io.testproject.java.sdk.v2.exceptions.FailureException;
import io.testproject.java.sdk.v2.reporters.TestReporter;
import io.testproject.java.sdk.v2.tests.WebTest;
import io.testproject.java.sdk.v2.tests.helpers.WebTestHelper;
import java.lang.String;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

/**
 * This class was automatically generated by TestProject
 * Project: Nutshell automation (one app)
 * Test: Login 
 * Generated by: Saranya Shanmugam (Saranya.Shanmugam@nutshellapps.co.uk)
 * Generated on Sun Nov 01 00:08:57 GMT 2020.
 */
@Test(
    name = "Login ",
    description = "This test was auto generated from steps of the 'Instance - Sanity tests' test",
    version = "1.0"
)

/*************************************Data driven***********************************/
public class Login implements WebTest {

	public ExecutionResult execute(WebTestHelper helper) throws FailureException {
	    WebDriver driver = helper.getDriver();
	    // set timeout for driver actions (similar to step timeout)
	    driver.setTimeout(15000);
	    TestReporter report = helper.getReporter();
	    By by;
	    boolean booleanResult = false;
	   
	    //1. Navigate to application URL
	    for(int i=1;i<=1;i++)
		{		
		    int j=0;    
		    try {
		    	driver.navigate().to(Exceldata.excelRead(i, j));
				Thread.sleep(3000);
			} catch (Throwable e) {
						e.printStackTrace();
			}   
	    
	    // 2. Click 'username'
	    by = By.cssSelector("#username");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'username'", booleanResult, TakeScreenshotConditionType.Failure);
	    
	    //3. Enter 'username'
	    for(j=1;j<=1;j++)
		{
	     
	    WebElement username = driver.findElement(By.id("username"));
	   
			try {
				username.sendKeys(Exceldata.excelRead(i, j));
			} catch (Throwable e1) {
					e1.printStackTrace();
			}
			    
	    // 4. Click 'password'
	    by = By.cssSelector("#password");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'password'", booleanResult, TakeScreenshotConditionType.Failure);
	    j++;

	    // 5. Enter 'password'
	    by = By.cssSelector("#password");

			try {
				booleanResult = driver.testproject().typeText(by,Exceldata.excelRead(i, j));
			} catch (Throwable e) {
				e.printStackTrace();
			}
	  
	    // 6. Click 'submit'
	    by = By.cssSelector("[name='submit']");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'submit'", booleanResult, TakeScreenshotConditionType.Failure);

	    // 7. Is 'Logout' visible?
	    //    Validating the login was successful
	    by = By.cssSelector("#logoutDash");
	    booleanResult = driver.testproject().isVisible(by);
	    report.step("Is 'Logout' visible?", booleanResult, TakeScreenshotConditionType.Failure);
	    return ExecutionResult.PASSED;
	    
		}}
		return null;
	  }}

/****************************************************testproject********************************************/
/*public class Login implements WebTest {
	  @Parameter(
	      defaultValue = "https://qa.internal.nutshellapps.com/eDocs-Accounts/User/Login",
	      direction = ParameterDirection.INPUT
	  )
	  public String Applicationurl;
	  @Parameter(
	      defaultValue = "saranya.shanmugam@nutshellapps.co.uk",
	      direction = ParameterDirection.INPUT
	  )
	  public String username;
	  @Parameter(
	      defaultValue = "Saranya123$$",
	      direction = ParameterDirection.INPUT
	  )
	  public String password;
	  public ExecutionResult execute(WebTestHelper helper) throws FailureException {
	    WebDriver driver = helper.getDriver();
	    // set timeout for driver actions (similar to step timeout)
	    driver.setTimeout(30000);
	    TestReporter report = helper.getReporter();
	    By by;
	    boolean booleanResult;
	   
	 // 1. Navigate to '{{ApplicationURL}}'
	    //    Navigates the specified URL (Auto-generated)
	    booleanResult = driver.testproject().navigateToUrl(Applicationurl);
	    report.step(String.format("Navigate to '%s'",Applicationurl), booleanResult, TakeScreenshotConditionType.Failure);
	   
	    // 2. Click 'username'
	    by = By.cssSelector("#username");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'username'", booleanResult, TakeScreenshotConditionType.Failure);
	  
	    // 3. Type '{{username}}' in 'username'
	    by = By.cssSelector("#username");
	    booleanResult = driver.testproject().typeText(by,username);
	    report.step(String.format("Type '%s' in 'username'",username), booleanResult, TakeScreenshotConditionType.Failure);
	   
	    // 4. Click 'password'
	    by = By.cssSelector("#password");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'password'", booleanResult, TakeScreenshotConditionType.Failure);
	  
	    // 5. Type '{{password}}' in 'password'
	    by = By.cssSelector("#password");
	    booleanResult = driver.testproject().typeText(by,password);
	    report.step(String.format("Type '%s' in 'password'",password), booleanResult, TakeScreenshotConditionType.Failure);
	   
	    // 6. Click 'submit'
	    by = By.cssSelector("[name='submit']");
	    booleanResult = driver.testproject().click(by);
	    report.step("Click 'submit'", booleanResult, TakeScreenshotConditionType.Failure);
	 
	    // 7. Is 'Logout' visible?
	    //    Validating the login was successful
	    by = By.cssSelector("#logoutDash");
	    booleanResult = driver.testproject().isVisible(by);
	    report.step("Is 'Logout' visible?", booleanResult, TakeScreenshotConditionType.Failure);
	    return ExecutionResult.PASSED;
	  }
	}
*/
		    
		 
